See doc/2+1+1_howto.text for more details


How it roughly works:
- Decide for a fixed order n of the less accurate polynomial
  P
- Decide also for an approximation interval
- compute the n roots of the polynomial using the programme
  in util/laguer/
  This will store the monomials in Square_root_BR_roots.dat
  and the normalisation factor in normierungLocal.dat
- the normalisation factor in the latter file corresponds
  to n-th root of C_total. In the monomial repr. the square
  root of this is needed. This rooting is done in phmc_tm.c
- the polynomial approximates 1/sqrt(x)
- copy the files normierungLocal.dat and Square_root_BR_roots.dat
  to your running directory
- the order used in the PHMC for P must be fixed to the same
  order as used for the root computation (or vice versa)


todo:
- fixed order of P as input parameter
- maybe more meaningful names for input/output files?
- generic way to use n_f=2 PHMC degenerate and non-degenerate
- eigenvalue computation - in parallel?
                         - on BG/L?
- reduce memory usage?

-------
comment by Thomas Chiarappa:

        Untill today, May 17. 2006 

   If one want to compute EV, remember to configure with 

               --disable-gaugecopy
 
