# $Id$

srcdir = @srcdir@
top_builddir =  @top_builddir@
abs_top_builddir = @abs_top_builddir@
top_srcdir = @top_srcdir@
abs_top_srcdir = @abs_top_srcdir@
subdir = io
builddir = @builddir@

CFLAGS = @CFLAGS@
DEPFLAGS = @DEPFLAGS@
LDFLAGS = @LDFLAGS@
DEFS = @DEFS@
OPTARGS = @OPTARGS@

AR = ar
RANLIB = @RANLIB@
CC = @CC@
CCDEP = @CCDEP@
CCLD = $(CC)
LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) ${OPTARGS} -o $@
LEX = @LEX@
AUTOCONF = @AUTOCONF@
DEFS = @DEFS@

LEMON_AVAILABLE = @LEMON_AVAILABLE@

INCLUDES = @INCLUDES@
LDADD =
COMPILE = ${CC} ${DEFS} ${INCLUDES} ${CFLAGS} ${OPTARGS}

LIBRARIES = libio

libio_TARGETS_PLAIN = utils_engineering
libio_TARGETS_LEMON = gauge_read_binary_parallel \
		gauge_read_parallel \
		gauge_write_binary_parallel \
		gauge_write_format_parallel \
		gauge_write_parallel \
		utils_read_checksum_parallel \
		utils_write_checksum_parallel \
		utils_write_xlf_parallel

ifeq (${LEMON_AVAILABLE}, 1)
libio_TARGETS = ${libio_TARGETS_PLAIN} ${libio_TARGETS_LEMON}
else
libio_TARGETS = ${libio_TARGETS_PLAIN}
endif

libio_OBJECTS = $(addsuffix .o, ${libio_TARGETS})

# default rule

all: Makefile dep libio.a

# rules for debugging
debug all-debug: CFLAGS := $(CFLAGS) @DEBUG_FLAG@
debug all-debug: all

# rules for profiling information
profile all-profile: CFLAGS := $(filter-out -fomit-frame-pointer,${CFLAGS}) @PROFILE_FLAG@
profile all-profile: all


#include dep rules


-include $(addsuffix .d,${libio_TARGETS} $libio_TARGETS_LEMON)

include ${top_srcdir}/Makefile.global

# rule to compile objects

%.o: ${srcdir}/%.c %.d Makefile
	$(COMPILE) -c $<


# rule to make libio
libio.a: ${libio_OBJECTS} Makefile
	@rm -f libio.a
	@${AR} cru libio.a $(libio_OBJECTS)
	@$(RANLIB) libio.a
	@cp libio.a ${top_builddir}/lib/libio.a

# rule to generate .d files

$(addsuffix .d,$(libio_TARGETS)): %.d: ${srcdir}/%.c Makefile
	@$(CCDEP) ${DEPFLAGS} ${INCLUDES} $< > $@

# rule to make dependencies

dep: ${addsuffix .d, ${libio_TARGETS}}

# rules to clean

compile-clean: Makefile
	rm -f ${$(addsuffix _OBJECTS, ${LIBRARIES})} *.d

clean: compile-clean
	rm -f $(addsuffix .a, ${LIBRARIES})
	rm -f ../lib/libio.a

distclean: clean
	rm -f Makefile


.PHONY: all dep clean compile-clean distclean debug all-debug profile all-profile
